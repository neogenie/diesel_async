on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

name: CI Tests

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
# This will ensure that only one commit will be running tests at a time on each PR.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check_and_test:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable", "beta", "nightly"]
        backend: ["postgres", "mysql"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.backend }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Set environment variables
        shell: bash
        if: matrix.backend == 'mysql'
        run: |
          echo "RUST_TEST_THREADS=1" >> $GITHUB_ENV

      - name: Set environment variables
        shell: bash
        if: matrix.rust == 'nightly'
        run: |
          echo "RUSTFLAGS=--cap-lints=warn" >> $GITHUB_ENV

      - name: Install postgres (Linux)
        if: runner.os == 'Linux' && matrix.backend == 'postgres'
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql
          echo "host    all             all             127.0.0.1/32            md5" > sudo tee -a /etc/postgresql/10/main/pg_hba.conf
          sudo service postgresql restart && sleep 3
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"
          sudo service postgresql restart && sleep 3
          echo "DATABASE_URL=postgres://postgres:postgres@localhost/" >> $GITHUB_ENV

      - name: Install mysql (Linux)
        if: runner.os == 'Linux' && matrix.backend == 'mysql'
        run: |
          sudo systemctl start mysql.service
          mysql -e "create database diesel_test; create database diesel_unit_test; grant all on \`diesel_%\`.* to 'root'@'localhost';" -uroot -proot
          echo "DATABASE_URL=mysql://root:root@localhost/diesel_test" >> $GITHUB_ENV

      - name: Install postgres (MacOS)
        if: runner.os == 'macOS' && matrix.backend == 'postgres'
        run: |
          initdb -D /usr/local/var/postgres
          pg_ctl -D /usr/local/var/postgres start
          sleep 3
          createuser -s postgres
          echo "DATABASE_URL=postgres://postgres@localhost/" >> $GITHUB_ENV

      - name: Install mysql (MacOS)
        if: runner.os == 'macOS' && matrix.backend == 'mysql'
        run: |
          brew install --overwrite mariadb@10.8
          /usr/local/opt/mariadb@10.8/bin/mysql_install_db
          /usr/local/opt/mariadb@10.8/bin/mysql.server start
          sleep 3
          /usr/local/opt/mariadb@10.8/bin/mysql -e "ALTER USER 'runner'@'localhost' IDENTIFIED BY 'diesel';" -urunner
          /usr/local/opt/mariadb@10.8/bin/mysql -e "create database diesel_test; create database diesel_unit_test; grant all on \`diesel_%\`.* to 'runner'@'localhost';" -urunner -pdiesel
          echo "DATABASE_URL=mysql://runner:diesel@localhost/diesel_test" >> $GITHUB_ENV

      - name: Install postgres (Windows)
        if: runner.os == 'Windows' && matrix.backend == 'postgres'
        shell: bash
        run: |
          choco install postgresql15 --force --params '/Password:root'
          echo "DATABASE_URL=postgres://postgres:root@localhost/" >> $GITHUB_ENV

      - name: Install mysql (Windows)
        if: runner.os == 'Windows' && matrix.backend == 'mysql'
        shell: cmd
        run: |
          choco install mysql
          "C:\tools\mysql\current\bin\mysql" -e "create database diesel_test; create database diesel_unit_test; grant all on `diesel_%`.* to 'root'@'localhost';" -uroot

      - name: Set variables for mysql (Windows)
        if: runner.os == 'Windows' && matrix.backend == 'mysql'
        shell: bash
        run: |
          echo "DATABASE_URL=mysql://root@localhost/diesel_test" >> $GITHUB_ENV

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust version check
        run: cargo +${{ matrix.rust }} version

      - name: Test diesel_async
        run: cargo +${{ matrix.rust }} test --manifest-path Cargo.toml --no-default-features --features "${{ matrix.backend }} deadpool bb8 mobc"

  rustfmt_and_clippy:
    name: Check rustfmt style && run clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: clippy-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Remove potential newer clippy.toml from dependencies
        run: |
          cargo update
          cargo fetch
          find ~/.cargo/registry -iname "*clippy.toml" -delete

      - name: Run clippy
        run: cargo +stable clippy --all

      - name: Check formating
        run: cargo +stable fmt --all -- --check
